modTree
install.packages("rpart")
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
party::rpart(cinc ~ ., data = forModel)
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
part::rpart(cinc ~ ., data = forModel)
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
rpart(cinc ~ ., data = forModel)
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
rpart::rpart(cinc ~ ., data = forModel)
summary(modLM)
prp(modTree)
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
rpart::rpart(cinc ~ ., data = forModel)
summary(modLM)
rpart::prp(modTree)
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
rpart::rpart(cinc ~ ., data = forModel)
summary(modLM)
rparty::prp(modTree)
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
rpart::rpart(cinc ~ ., data = forModel)
summary(modLM)
party::prp(modTree)
library("reticulate", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.4")
detach("package:reticulate", unload=TRUE)
library("reticulate", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.4")
install.packages("reticulate")
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
NMC<-readr::read_csv("NMC_5_0.csv")
head(NMC)
NMC %>%
filter(stateabb %in% c("USA", "CHN") & year > "1950") %>%
select(stateabb, year, cinc) %>%
ggplot(aes(x=year, y=cinc, color = stateabb)) +
geom_point() +
stat_smooth() +
ylab("Year of Measure") +
xlab("Composite Index of National Capabilities")
NMC %>%
select(stateabb, year, milex) %>%
group_by(year) %>%
summarise(avg_Expenditure = mean(milex)) %>%
ggplot(aes(x=year, y=avg_Expenditure)) +
geom_point() +
xlab("Year of Observation") +
ylab("Military Expenditure In Billion of USD") +
geom_vline(xintercept = 1917) +
geom_vline(xintercept = 1941) +
geom_vline(xintercept = 1955) +
geom_vline(xintercept = 1993) +
geom_vline(xintercept = 2002)
NMC %>%
select(stateabb, year, milex) %>%
filter(stateabb != "USA") %>%
group_by(year) %>%
summarise(avg_Expenditure = mean(milex)) %>%
ggplot(aes(x=year, y=avg_Expenditure)) +
geom_point() +
xlab("Year of Observation") +
ylab("Military Expenditure In Billion of USD") +
geom_vline(xintercept = 1917) +
geom_vline(xintercept = 1941) +
geom_vline(xintercept = 1955) +
geom_vline(xintercept = 1993) +
geom_vline(xintercept = 2002)
determineUSMilitaryExpenditure <- function(passedYear)
{
result<-
NMC %>%
select(stateabb, milex, year) %>%
filter(stateabb=="USA") %>%
filter(year==passedYear) %>%
select(milex)
return (result)
}
year1993MilEx <- determineUSMilitaryExpenditure(1993)
year2012MilEx <- determineUSMilitaryExpenditure(2012)
(year2012MilEx - year1993MilEx)
milper<-
NMC%>%
select(year, milper) %>%
group_by(year) %>%
summarise(milper=mean(milper)) %>%
filter(year>=1993) %>%
select(milper)
milex<-
NMC%>%
select(year, milex) %>%
group_by(year) %>%
summarise(milex=mean(milex)) %>%
filter(year>=1993) %>%
select(milex)
cor(milex, milper, method = c("pearson"))
head(NMC)
forModel <-
NMC %>%
select(milex, milper, irst, pec, tpop, upop, cinc)
modLM <-
lm(cinc ~ ., data = forModel)
modTree <-
rpart::rpart(cinc ~ ., data = forModel)
summary(modLM)
prp(modTree)
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code')
WBD
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
filter('Country Name', 'Country Code', )
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
filter('Country Name', 'Country Code',1960 )
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code',1960 )
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code','1960' )
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code', '1960')
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code', 1960)
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code', 1960)
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code', '1960')
WBD
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
view(NMC)
View(NMC)
# Select only the important variables from World Bank that we care about. Note that GDP is in USD.
WBD <-
WBD %>%
select('Country Name', 'Country Code', '1960')
WBD
# Select only the important variables from World Bank that we care about. Note that GDP is in USD. And that year only goes up to 2012 in NMC, select until then.
WBD <- readr::read_csv("wbd.csv")
WBD <-
WBD %>%
select('Country Name', 'Country Code', '1960')
WBD
# Select only the important variables from World Bank that we care about. Note that GDP is in USD. And that year only goes up to 2012 in NMC, select until then.
WBD <- readr::read_csv("wbd.csv")
c<-c('Country Name', 'Country Code', '1960')
WBD <-
WBD %>%
select(c)
# Select only the important variables from World Bank that we care about. Note that GDP is in USD. And that year only goes up to 2012 in NMC, select until then.
WBD <- readr::read_csv("wbd.csv")
c<-c('Country Name', 'Country Code', '1960')
WBD <-
WBD %>%
select(c)
# Select only the important variables from World Bank that we care about. Note that GDP is in USD. And that year only goes up to 2012 in NMC, select until then.
WBD <- readr::read_csv("wbd.csv")
q<-c('Country Name', 'Country Code', '1960')
WBD <-
WBD %>%
select(q)
WBD
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
library(reticulate)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
columnNamesForSelection<-c(py$dateString)
WBD <-
WBD %>%
select(q)
WBD
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
columnNamesForSelection<-c(py$dateString)
WBD <-
WBD %>%
select(columnNamesForSelection)
WBD
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
columnNamesForSelection<-c(py$dateString)
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
columnNamesForSelection<-c(py$dateString)
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
columnNamesForSelection<-c(py$dateString)
WBD <-
WBD %>%
select('Country Name', 'Country Code' , '1960', '1961', '1962', '1963', '1964', '1965', '1966', '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992', '1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012')
View(WBD)
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
columnNamesForSelection<-c('Country Name', 'Country Code' , '1960', '1961', '1962', '1963', '1964', '1965', '1966', '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992', '1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012')
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
pyString <- py$dateString
pyString
columnNamesForSelection<-c()
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
WBD <- readr::read_csv("wbd.csv")
# Now we are going to vectorize the String of column names from our python module.
pyString <- py$dateString
pyString
columnNamesForSelection<-c()
WBD <-
WBD %>%
select(columnNamesForSelection)
WBD <- readr::read_csv("wbd.csv")
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection<- py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
WBD <- readr::read_csv("wbd.csv")
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection<- py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
WBD
WBD <- readr::read_csv("wbd.csv")
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection<- py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
WBD <- readr::read_csv("wbd.csv")
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection<- py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
WBD
WBD <- readr::read_csv("wbd.csv")
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection<- py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
WBD <- readr::read_csv("wbd.csv")
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
library(reticulate)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py$selectionList
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py_to_r(selectionList)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
py_to_r(columnNamesForSelection) <-
py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py$selectionList
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
library(reticulate)
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <-
py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
library(DataComputing)
library(tidyr)
library(readr)
library(dplyr)
library(ggmap)
library(party)
library(rpart)
library(reticulate)
use_python("/usr/local/bin/python")
# Read the NMC data in.
NMC<-readr::read_csv("NMC_5_0.csv")
# Read the World Bank Data
WBD <- readr::read_csv("wbd.csv")
# Inspect the data
head(NMC)
head(WBD)
nrow(NMC)
nrow(WBD)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
columnNamesForSelection <- py$selectionList
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
py$r
WBD <-
WBD %>%
select(columnNamesForSelection)
View(WBD)
# Pass the selection list from our Python enviroment, and save it as a vecorized list "c()" in out R enviroment
py$selectionList
